@model StoreMVC.Models.LocationVM

@{
    ViewData["Title"] = "SelectInventory";
}

<h1>Replenish Inventory</h1>

<h4>Select a Location:</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="SelectInventory">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @*<div class="form-group">
                    <label asp-for="id" class="control-label"></label>
                    <input asp-for="id" class="form-control" />
                    <span asp-validation-for="id" class="text-danger"></span>
                </div>*@
            @*<div class="col-md-4">
                    <div class="form-group">
                        Category :
                        @Html.DropDownListFor(model => model.id, new SelectList(Model.LocationList, "Value", "Text"),
                                      new { @class = "form-control" })
                    </div>
                </div>*@
            <div class="col-md-4">
                <div class="form-group">
                    @Html.DropDownListFor(model => model.locationName, new SelectList(Model.LocationList, "Value", "Text"),
                                  new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Select" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@*<div>
    <a asp-action="Index">Back to List</a>
</div>*@

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}